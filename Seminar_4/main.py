#!/usr/bin/env python3
from random import randint
from inventory import Inventory, Item

def task_1():
    print("–ó–∞–¥–∞–Ω–∏–µ #1")
    length = 10
    print("–°–æ–∑–¥–∞—é –º–∞—Å—Å–∏–≤ —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —á–∏—Å–µ–ª, –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ %d" % length)
    array = [randint(0, 200) for _ in range(length)]
    print("–°–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤: %s " % array)
    for i in range(length -1):
        for j in range(length - i -1):
            if array[j] > array[j + 1]:
                temp = array[j]
                array[j] = array[j + 1]
                array[j + 1] = temp
    print("–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤: %s " % array) 

def task_2():
    print("–ó–∞–¥–∞–Ω–∏–µ #2")
    colors = {
        "aqua": (0, 255, 255),
        "black": (0, 0, 0),
        "blue": (0, 0, 255,),
        "fuchsia": (255, 0, 255),
        "gray": (128, 128, 128),
        "green": (0, 128, 0),
        "lime": (0, 255, 0),
        "maroon": (128, 0, 0),
        "navy": (0, 0, 128),
        "olive": (128, 128, 0),
        "purple": (128, 0, 128),
        "red": (255, 0, 0),
        "silver": (192, 192, 192),
        "teal": (0, 128, 128),
        "white": (255, 255, 255),
        "yellow": (255, 255, 0)
    }
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print(" —Ü–≤–µ—Ç–∞ - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Çy–ø–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã")
        print(" –∏–Ω—Ñ–æ [–∫–æ–¥] - –ø–æ–∫–∞–∂–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–≤–µ—Ç–µ")
        print(" —Å—Ç–æ–ø - –≤—ã–π—Ç–∏")
        i = input(": ")
        if i.lower() == "—Ü–≤–µ—Ç–∞":
            print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö –∫–æ–¥–∞—Ö:")
            print(*colors.keys(), sep="\n")
        elif i.lower().startswith("–∏–Ω—Ñ–æ "):
            code = i.lower().split("–∏–Ω—Ñ–æ ")[1]
            if code not in colors.keys():
                print("[‚ùå] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥")
            else:
                color = colors[code]
                print("\n[‚úî] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–≤–µ—Ç–µ:\n–ö–æ–¥: %s\n–ö–æ–¥ –≤ 10-—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: %s; \t –≤ 16-—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: #%02x%02x%02x\n" % (code, color, *color))
        elif i.lower() == "—Å—Ç–æ–ø":
            break
        else:
            print("[‚ùå] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

def task_3():
    print("–ó–∞–¥–∞–Ω–∏–µ #3")
    array1 = [randint(0, 15) for _ in range(10)]
    array2 = [randint(0, 15) for _ in range(10)]
    print("–°–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ (1): %s " % array1)
    print("–°–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ (2): %s " % array2)
    print("–°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
    print(" –í—Ö–æ–¥—è—â–∏—Ö –≤ –æ–±–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞: %s " % list(set(array1) & set(array2)))
    print(" –í—Ö–æ–¥—è—â–∏—Ö —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ: %s " % list(set(array1) - set(array2)))
    print(" –í—Ö–æ–¥—è—â–∏—Ö —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ç–æ—Ä–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ: %s " % list(set(array2) - set(array1)))
    print(" –í—Ö–æ–¥—è—â–∏—Ö –≤ –ø–µ—Ä–≤–æ–µ –∏–ª–∏ –≤–æ –≤—Ç–æ—Ä–æ–µ, –Ω–æ –Ω–µ –≤ –æ–±–∞ –∏–∑ –Ω–∏—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ: %s " % list(set(array1) ^ set(array2)))

def task_4():
    print("–ó–∞–¥–∞–Ω–∏–µ #4")
    inventory = Inventory(100.0)
    items = [
        Item('üíé', "–ê–ª–º–∞–∑", 1.0),
        Item('üçï', "–ü–∏—Ü—Ü–∞", 5.0),
        Item('üß¶', "–ù–æ—Å–∫–∏", 2.5),
        Item('üß±', "–ö–∏—Ä–ø–∏—á–∏", 102.5)
    ]
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print(" –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print(" –ø—Ä–µ–¥–º–µ—Ç—ã - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        print(" –∏–Ω—Ñ–æ [–Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞] - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ")
        print(" –¥–æ–±–∞–≤–∏—Ç—å [id –ø—Ä–µ–¥–º–µ—Ç–∞] - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print(" —É–¥–∞–ª–∏—Ç—å [–Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ] - —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ—Ç–∞—Ä—è")
        print(" —Å—Ç–æ–ø - –≤—ã–π—Ç–∏")
        i = input(": ")
        if i.lower() == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å":
            print("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n%s" % inventory.get_inventory())

        elif i.lower() == "–ø—Ä–µ–¥–º–µ—Ç—ã":
            print("–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:\n\t–ù–∞–∑–≤–∞–Ω–∏–µ\t–í–µ—Å\n%s" % '\n'.join(["%d)%s -\t%s\t\t%0.2f" % (i+1, items[i].emoji, items[i].name, items[i].weight) for i in range(len(items))]))

        elif i.lower().startswith("–∏–Ω—Ñ–æ "):
            item_pos = i.lower().split("–∏–Ω—Ñ–æ ")[1]
            try:
                item_pos = int(item_pos)
                print(inventory.get_item(item_pos))
            except ValueError:
                print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —á–∏—Å–ª–æ–º)")
            except:
                print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (–ø—Ä–µ–¥–º–µ—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç)")

        elif i.lower().startswith("–¥–æ–±–∞–≤–∏—Ç—å "):
            item_id = i.lower().split("–¥–æ–±–∞–≤–∏—Ç—å ")[1]
            try:
                item_id = int(item_id) -1
                if item_id < 0 or len(items) < item_id: 
                    return print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (–ø—Ä–µ–¥–º–µ—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç)")

                inventory.add(items[item_id])
                print("[‚úî] –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç %s" % items[item_id].name)
            except ValueError:
                print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —á–∏—Å–ª–æ–º)")
            except:
                print("[‚ùå] –ù–µ–≤–æ–∂–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç (–ª–∏–º–∏—Ç –≤–µ—Å–∞ –∏–Ω–≤–µ—Ç–∞—Ä—è)")

        elif i.lower().startswith("—É–¥–∞–ª–∏—Ç—å "):
            item_pos = i.lower().split("—É–¥–∞–ª–∏—Ç—å ")[1]
            try:
                item_pos = int(item_pos)
                print("[‚úî] –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç %s" % inventory.remove(item_pos).name)
            except ValueError:
                print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —á–∏—Å–ª–æ–º)")
            except:
                print("[‚ùå] –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ (–ø—Ä–µ–¥–º–µ—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç)")

        elif i.lower() == "—Å—Ç–æ–ø":
            break
        else:
            print("[‚ùå] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n")

    pass

if __name__ == "__main__":
    task_number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è[1-4]: ")

    if task_number == "1":
        task_1()
    elif task_number == "2":
        task_2()
    elif task_number == "3":
        task_3()
    elif task_number == "4":
        task_4()
    else:
        print("–ù–µ–≤–µ—Ä–Ω–æ –≤—ã–±—Ä–∞–Ω –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è!")
